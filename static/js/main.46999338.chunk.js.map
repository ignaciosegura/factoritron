{"version":3,"sources":["logo.svg","stores/gamestore.js","components/button.js","components/teamboard.js","components/newteam.js","components/scoreboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","GameStore","teams","observable","team","this","score","teamName","arguments","length","undefined","push","name","Button","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","e","preventDefault","sign","addPointToTeam","subtractPointToTeam","buttonClass","react_default","a","createElement","className","onClick","Component","TeamBoard","inject","observer","_Component","teamInfo","inherits","createClass","key","value","components_button","NewTeam","state","active","handleKeyPress","addTeam","setState","currentTarget","inputState","type","onKeyPress","ScoreBoard","teamList","ScoreList","map","element","index","teamboard","newteam","App","scoreboard","Boolean","window","location","hostname","match","ReactDOM","render","index_module","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46999338.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { observable, computed } from 'mobx';\n\nclass Game {\n  teams = observable([]);\n\n  addPointToTeam(team) {\n    this.teams[team].score++;\n  }\n\n  subtractPointToTeam(team) {\n    this.teams[team].score = this.teams[team].score > 0\n      ? this.teams[team].score - 1\n      : 0;\n  }\n\n  addTeam(teamName = 'new team') {\n    this.teams.push(\n      {\n        name: teamName,\n        score: 0\n      }\n    )\n  }\n}\n\nconst GameStore = new Game();\n\nexport default GameStore;\n","import React, { Component } from 'react';\n\nimport GameStore from '../stores/gamestore.js';\n\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n\n    let sign = this.props.sign;\n\n    if (sign === '+') {\n      GameStore.addPointToTeam(this.props.team);\n    } else {\n      GameStore.subtractPointToTeam(this.props.team);\n    }\n\n  }\n\n  render() {\n    let buttonClass = 'button ';\n    buttonClass += this.props.sign === '+'\n      ? 'button plus'\n      : 'minus';\n    return <div className={buttonClass} onClick={this.handleClick}>{this.props.sign}</div>\n  }\n}\n\nexport default Button;\n","import React, { Component } from 'react';\n\nimport { inject, observer } from 'mobx-react';\n\nimport Button from './button.js';\n\nconst TeamBoard = inject('GameStore')(observer(class TeamBoard extends Component {\n  constructor(props) {\n    super(props);\n    let team = this.props.team;\n    this.teamInfo = this.props.GameStore.teams[team];\n  }\n  render() {\n    return <div className=\"teamboard scoreboard-box\">\n      <div className=\"name\">{this.teamInfo.name}</div>\n      <div className=\"score\">{this.teamInfo.score}</div>\n      <div className=\"buttons\">\n        <Button sign=\"+\" team={this.props.team} />\n        <Button sign=\"-\" team={this.props.team} />\n      </div>\n    </div>;\n  }\n}));\n\n\nexport default TeamBoard;\n","import React, { Component } from 'react';\n\nimport GameStore from '../stores/gamestore.js';\n\nclass NewTeam extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { active: false };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.addTeam = this.addTeam.bind(this);\n  }\n  handleClick(e) {\n    e.preventDefault();\n\n    this.setState({ active: true });\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.addTeam(e.currentTarget.value);\n      this.setState({ active: false });\n    }\n  }\n\n  addTeam(teamName) {\n    GameStore.addTeam(teamName);\n  }\n\n  render() {\n    let inputState = this.state.active\n      ? 'active'\n      : 'not-active';\n\n    return <div className=\"new-team scoreboard-box\" onClick={this.handleClick}>+\n      <input className={inputState} type=\"text\" onKeyPress={this.handleKeyPress} />\n    </div>\n  }\n}\n\nexport default NewTeam;\n","import React, { Component } from 'react';\n\nimport { inject, observer } from 'mobx-react';\n\nimport TeamBoard from './teamboard.js';\nimport NewTeam from './newteam.js';\n\nconst ScoreBoard = inject('GameStore')(observer(\n  class ScoreBoard extends Component {\n    constructor(props) {\n      super(props);\n\n      this.teamList = this.props.GameStore.teams;\n    }\n\n    render() {\n      let ScoreList = this.teamList.map((element, index) => {\n        return <TeamBoard team={index} key={index} />\n      });\n\n      return <div className=\"scoreboard\">\n        {ScoreList}\n        <NewTeam />\n      </div>\n    }\n  }\n));\n\nexport default ScoreBoard;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\n\nimport ScoreBoard from './components/scoreboard.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"title\">Factoritr√≥n</div>\n        </header>\n        <ScoreBoard />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'mobx-react';\nimport GameStore from './stores/gamestore.js'\n\nReactDOM.render(<Provider GameStore={GameStore}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}